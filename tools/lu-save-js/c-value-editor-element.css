
:host {
   display: grid;
   grid-template:
      "path"    max-content
      "editor"  max-content
      "preview" 1fr
   ;
}
header {
   grid-area:     path;
   font-family:   Consolas, Inconsolata, Lucida Console, monospace;
   font-weight:   bold;
   border-bottom: 1px solid #808080;
   margin-bottom: .5em;
}
input, select {
   grid-area: editor;
   
   &[type="number" i] {
      text-align: right;
   }
}

:host([data-type="string"]) .preview {
   --background: #FFF;
   background: var(--background);
   
   white-space: pre;
   overflow:    auto;
   
   /* so un-shifted text aligns properly with shifted text */
   span {
      vertical-align: top;
   }
   
   .placeholder {
      color:  #30A030;
      border: 1px solid currentColor;
   }
   .shift {
      display:     inline-block;
      margin-top:  var(--shift-y,0px);
      margin-left: var(--shift-x,0px);
   }
   .skip {
      display: inline-block;
   }
   .clear {
      display:    inline-block;
      background: var(--background);
   }
   
   .force-fixed-width :is(.letter, .ligature) {
      display:    inline-block;
      min-width:  var(--fixed-width,auto);
      text-align: left;
   }
   
   .ligature.sup-sub {
      &::before,
      &::after {
         display: inline-block;
         font-size: .7em;
         vertical-align: top;
      }
      &::before {
         content: var(--sup-char);
      }
      &::after {
         content: var(--sub-char);
         padding-top: .3em;
      }
   }
   
   /* for the "BLOCK" in "PoKeBLOCK" */
   .ligature.skinny {
      --width: 0.8;
      
      display:     inline-block;
      font-family: Consolas, Inconsolata, Lucida Console, monospace;
      width:       calc(1ch * var(--char-count,2) * var(--width,1));
      transform:   scaleX(var(--width,1));
   }
}